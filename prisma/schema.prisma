generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Customer {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  email         String
  firstName     String
  lastName      String
  phoneNumber   String
  password      String
  orders        Order[]
  cartId        String?   @db.ObjectId
  cart          Cart?     @relation("CustomerCart")
}

model Category {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  value      String
  products   Product[]
}

model Product {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  description  String
  categoryId   String      @db.ObjectId
  category     Category    @relation(fields: [categoryId], references: [id])
  imageLink    String
  variations   Variation[]
  cartItems    CartItem[]
  orderItems   OrderItem[]  @relation("ProductOrderItems")
}

model Variation {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  length    Int
  curlType  String
  price     Float
  stock     Int
  sales     Int
  product   Product    @relation(fields: [productId], references: [id])
  productId String     @db.ObjectId
  cartItems CartItem[] @relation("VariationCartItems")
  orderItems OrderItem[] @relation("VariationOrderItems")
}

model CartItem {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  cartId       String      @db.ObjectId
  cart         Cart        @relation(fields: [cartId], references: [id], name: "CartItems")
  productId    String      @db.ObjectId
  Product      Product     @relation(fields: [productId], references: [id])
  variationId  String      @db.ObjectId
  Variation    Variation   @relation(fields: [variationId], references: [id], name: "VariationCartItems")
  quantity     Int
}

model Cart {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  customerId  String      @unique @db.ObjectId
  customer    Customer    @relation(fields: [customerId], references: [id], name: "CustomerCart")
  items       CartItem[]  @relation("CartItems")
}

model Order {
  id                String     @id @default(auto()) @map("_id") @db.ObjectId
  orderId           String 
  customerId        String     @db.ObjectId
  customer          Customer   @relation(fields: [customerId], references: [id])
  firstName         String
  lastName          String
  isStorePickup     Boolean
  streetAddress     String
  apartmentUnit     String
  city              String
  state             String
  zipCode           String
  country           String
  email             String
  phoneNumber       String
  items             OrderItem[]
  totalPrice        Float
  paymentId         String
  status            String 
  trackingNumber    String    
  createdAt         DateTime   @default(now())
}

model OrderItem {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  orderId      String     @db.ObjectId
  order        Order      @relation(fields: [orderId], references: [id])
  variationId  String?    @db.ObjectId 
  variation    Variation? @relation(fields: [variationId], references: [id], name: "VariationOrderItems")
  productId    String?    @db.ObjectId 
  product      Product?   @relation(fields: [productId], references: [id], name: "ProductOrderItems")
  quantity     Int
}
